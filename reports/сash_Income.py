# –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏  –ø–æ –≤—Å–µ–º –º–∞–≥–∞–∑–∏–Ω–∞–º  –≤ ‚ÇΩ.
# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á–µ—Ç–∞:
# - shop_id, id –º–∞–≥–∞–∑–∏–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–∑–∞–≥—Ä—É–∑–∏—Ç—å id –º–∞–≥–∞–∑–∏–Ω–∞ –∏–∑ –±–∞–∑—ã tc)
# - group_id,  id –≥—Ä—É–ø—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ (–∑–∞–≥—Ä—É–∑–∏—Ç—å –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –±–∞–∑—ã tc)
# - period, –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ (–¥–µ–Ω—å, –Ω–µ–¥–µ–ª—è,  –¥–≤–µ –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü)

from arrow import utcnow
from bd.model import Session, CashRegister
from pprint import pprint

name = "üí∏üì• –í–Ω–µ—Å–µ–Ω–∏–µ ‚û°Ô∏è".upper()
desc = "–í–Ω–µ—Å–µ–Ω–∏–µ"
mime = "text"


class whoInput:
    desc = "–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç –∫–æ–≥–æ".upper()
    type = "SELECT"

    def get_options(self, session: Session):
        return (
            {"id": "–†/–°", "name": "–†/–° ‚û°Ô∏è".upper()},
            {"id": "Bagrationa", "name": "Bagrationa ‚û°Ô∏è".upper()},
            {"id": "Skala", "name": "Skala ‚û°Ô∏è".upper()},
            {"id": "Another", "name": "Another ‚û°Ô∏è".upper()},
        )


class baseInput:
    desc = "–û—Å–Ω–æ–≤–∞–Ω–∏–µ:"
    type = "SELECT"

    def get_options(self, session: Session):
        output = (
            {"id": "–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è", "name": "–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è ‚û°Ô∏è".upper()},
            {"id": "–ü—Ä–æ—á–∏–µ", "name": "–ü—Ä–æ—á–∏–µ ‚û°Ô∏è".upper()},
            {"id": "–£—Å–ª—É–≥–∏", "name": "–£—Å–ª—É–≥–∏ ‚û°Ô∏è".upper()},
            {"id": "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "name": "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ ‚û°Ô∏è".upper()},
        )

        return output


class commentInput:
    desc = "–ù–∞–ø–∏—à–∏—Ç–µ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ ‚úçÔ∏è".upper()
    type = "MESSAGE"


class CashIncomeInput:
    desc = "–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É ‚úçÔ∏è".upper()
    type = "MESSAGE"


def get_inputs(session: Session):
    return {
        "who": whoInput,
        "base": baseInput,
        "comment": commentInput,
        "cashIncome": CashIncomeInput,
    }


def generate(session: Session):
    _dict = {}
    params = session.params["inputs"]["0"]
    pprint(params)
    _dict["user_id"] = session["user_id"]
    _dict["who"] = params["who"]
    _dict["comment"] = params["comment"]
    _dict["cash"] = int(params["cashIncome"])
    _dict["base"] = params["base"]
    _dict["x_type"] = "CASH_INCOME"
    _dict["closeDate"] = utcnow().now().isoformat()
    number = CashRegister.objects().order_by("-closeDate").first()
    if number:
        number_ = number["number"] + 1
    else:
        number_ = 1

    _dict["number"] = number_
    _dict["payment"] = "cash"
    pprint(_dict)

    CashRegister.objects(closeDate=_dict["closeDate"]).update(**_dict, upsert=True)
    result = {
        "–û—Ç:": params["who"],
        "–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π:": params["comment"],
        "–°—É–º–º–∞:": int(params["cashIncome"]),
        "–û—Å–Ω–æ–≤–∞–Ω–∏–µ:": params["base"],
        "–¢–∏–ø:": "–í–Ω–µ—Å–µ–Ω–∏–µ:",
        "–î–∞—Ç–∞:": utcnow().now().isoformat()[0:16],
        "‚Ññ:": number_,
    }

    return [result]
