from arrow import utcnow, get
from bd.model import (
    Session,
    Shift_Opening_Report,
)
from .inputs import AfsInput

from pprint import pprint

import logging
import sys


logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å –∏–º–µ–Ω–µ–º, –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ MIME-—Ç–∏–ø–æ–º
name = "üïíÔ∏èüö¨üåØ–ø–µ—Ä–µ—Ä—ã–≤ ‚û°Ô∏è".upper()
desc = "–°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–µ—Ä–µ—Ä—ã–≤–∞—Ö"
mime = "text"


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–µ–∞–Ω—Å–∞
def get_inputs(session: Session):
    return {
        "location": AfsInput,
    }


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
def generate(session: Session):
    result = []
    logger.info("Starting to generate break report")

    try:

        params = session.params["inputs"]["0"]  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Å–µ–∞–Ω—Å–∞
        logger.info("Parameters extracted: %s", params)

        since = (
            utcnow().replace(hour=3, minute=00).isoformat()
        )  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Å—É—Ç–æ–∫ (3:00 UTC)
        until = (
            utcnow().replace(hour=20, minute=59).isoformat()
        )  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω—Ü–∞ —Å—É—Ç–æ–∫ (20:59 UTC)

        # –ü–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–º–µ–Ω—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        documents_open = (
            Shift_Opening_Report.objects(
                __raw__={
                    "openData": {"$gte": since, "$lt": until},
                    "x_type": "OPEN",
                    "user_id": session.user_id,
                }
            )
            .order_by("-openData")
            .first()
        )
        logger.info("Shift opening document found: %s", documents_open)

        # –ü–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ—Ä—ã–≤–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–∞–≥–∞–∑–∏–Ω–∞, –≥–¥–µ –æ—Ç–∫—Ä—ã—Ç–∞ —Å–º–µ–Ω–∞
        documents_break = (
            Shift_Opening_Report.objects(
                __raw__={
                    "openData": {"$gte": since, "$lt": until},
                    "x_type": "BREAK",
                    "break": "open",
                    "shop_id": documents_open.shop,
                }
            )
            .order_by("-openData")
            .first()
        )
        logger.info("Break document found: %s", documents_break)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ä—ã–≤–µ, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã
        if documents_break:
            delta = (
                (
                    get(params["location"]["data"]) - get(documents_break.openData)
                ).seconds
                // 60
                % 60
            )
            logger.info("Break duration calculated: %d minutes", delta)

            if delta > 0:
                result_delta = f"{delta} –º–∏–Ω—É—Ç."
            else:
                result_delta = "–ú–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã".upper()
            break_data = {
                "user_id": session.user_id,
                "closeDate": params["location"]["data"],
                "openData": documents_break.openData,
                "break": "closed",
                "x_type": "BREAK",
                "shop_id": documents_open.shop,
                "close_location": params["location"],
                "delta": delta,
            }

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ result
            result.append(
                {
                    "–ø–µ—Ä–µ—Ä—ã–≤ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è".upper(): break_data["closeDate"][:16],
                    "–í—Ä–µ–º—è –ø–µ—Ä–µ—Ä—ã–≤–∞:".upper(): result_delta,
                }
            )
            logger.info("Break data processed and added to results")

        else:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –ø–µ—Ä–µ—Ä—ã–≤ –µ—â–µ –Ω–µ –Ω–∞—á–∞—Ç
            break_data = {
                "user_id": session.user_id,
                "openData": params["location"]["data"],
                "x_type": "BREAK",
                "break": "open",
                "shop_id": documents_open.shop,
                "open_location": params["location"],
            }
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ result
            result.append({"–ø–µ—Ä–µ—Ä—ã–≤ –Ω–∞—á–∞–ª—Å—è".upper(): break_data["openData"][:16]})
            logger.info("Break start data processed and added to results")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ä—ã–≤–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        Shift_Opening_Report.objects(
            user_id=session.user_id,
            openData=break_data["openData"],
        ).update(**break_data, upsert=True)
        logger.info("Break data updated in the database: %s", break_data)

        return result
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞: %s –Ω–∞ —Å—Ç—Ä–æ–∫–µ %s", e, sys.exc_info()[-1].tb_lineno)
        return result
