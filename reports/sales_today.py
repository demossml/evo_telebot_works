from bd.model import Shop, Products, Documents, Session, Employees, Document, TimeSync
from .util import get_shops_uuid_user_id, last_time, sales_parallel
from pprint import pprint
from arrow import get, utcnow
import plotly.express as px
from io import BytesIO


name = "üßæ üõí –ø—Ä–æ–¥–∞–∂–∏ —Å–µ–≥–æ–¥–Ω—è‚û°Ô∏è".upper()
desc = ""
mime = "image_bytes"


def get_inputs(session: Session):
    return {}


def generate(session: Session):

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö
    shops_id = get_shops_uuid_user_id(session)

    payment_type = {
        "CARD": "–ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π:",
        "ADVANCE": "–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–æ–π (–∑–∞—á–µ—Ç–æ–º –∞–≤–∞–Ω—Å–∞):",
        "CASH": "–ù–∞–ª. —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏:",
        "COUNTEROFFER": "–í—Å—Ç—Ä–µ—á–Ω—ã–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º:",
        "CREDIT": "–ü–æ—Å—Ç–æ–ø–ª–∞—Ç–æ–π (–≤ –∫—Ä–µ–¥–∏—Ç):",
        "ELECTRON": "–ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏:",
        "UNKNOWN": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ. –ü–æ-—É–º–æ–ª—á–∞–Ω–∏—é:",
    }

    since = utcnow().replace(hour=3, minute=00).isoformat()
    until = utcnow().replace(hour=23, minute=00).isoformat()

    total_results_shops = {}
    total_result_data_payments = {}
    result_data = []
    data_last_time = {}
    # pprint(sales_parallel(shops_id, since, until).items())
    for uuid, payments in sales_parallel(shops_id, since, until).items():
        shop_name = Shop.objects(uuid__exact=uuid).only("name").first().name
        time_sync = TimeSync.objects(shop=uuid).only("time").first()
        if time_sync:
            data_last_time.update({f"üï∞Ô∏è –≤—ã–≥. {shop_name}": time_sync.time})
        else:
            data_last_time.update({f"üï∞Ô∏è –≤—ã–≥. {shop_name}": "No data"})

        sales = {"–ú–∞–≥–∞–∑–∏–Ω:": shop_name}

        if payments:
            sum_sales = 0
            for k, v in payments.items():
                sales[payment_type[k]] = f"{v} ‚ÇΩ"
                if payment_type[k] in total_result_data_payments:
                    total_result_data_payments[payment_type[k]] += v
                else:
                    total_result_data_payments[payment_type[k]] = v
                sum_sales += v
            sales["–°—É–º–º–∞:"] = f"{sum_sales} ‚ÇΩ"
            result_data.append(sales)
            total_results_shops.update({shop_name: sum_sales})
    total_result_data_s = {
        "–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞:".upper(): since[0:10],
        "–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞:".upper(): until[0:10],
    }

    # total_result_data_s.update(total_result_data_payments)

    total_sum = sum(total_result_data_payments.values())

    # total_result_data_s.update(
    #     {
    #         "–ò—Ç–æ–≥–æ:".upper(): f"{total_sum} ‚ÇΩ",
    #     }
    # )

    result_data.append(total_result_data_s)
    # pprint(total_result_data_payments)
    # pprint(total_results_shops)
    # –ó–∞–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ y
    current_y = 0.0
    annotations_ = []

    for k, v in total_result_data_payments.items():
        annotations_.append(
            dict(
                text=f"{k} {v}‚ÇΩ",
                x=0.5,
                y=current_y,
                showarrow=False,
                font=dict(
                    size=24,
                    color="black",
                    family="Arial Black",
                ),
            )
        )
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ y –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏
        current_y -= 0.05
    annotations_.append(
        dict(
            text=f"–ò—Ç–æ–≥–æ: {total_sum}‚ÇΩ",  # –¢–µ–∫—Å—Ç –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏,
            x=0.5,
            y=current_y,
            showarrow=False,
            font=dict(
                size=24,
                color="black",
                family="Arial Black",
            ),
        )
    )

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Å—É–º–º—ã –ø—Ä–æ–¥–∞–∂
    payments_names = list(total_result_data_payments.keys())
    sum_payments = list(total_result_data_payments.values())

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–ª—è –æ–±—â–∏—Ö –ø—Ä–æ–¥–∞–∂ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º
    fig = px.pie(
        names=list(total_results_shops.keys()),  # –ù–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∫—Ä—É–≥–∞
        values=list(total_results_shops.values()),  # –û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –º–∞–≥–∞–∑–∏–Ω—É
        title="–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–Ω–µ—à–Ω–µ–≥–æ –∫—Ä—É–≥–∞
        labels={"names": "–ú–∞–≥–∞–∑–∏–Ω—ã", "values": "–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏"},  # –ú–µ—Ç–∫–∏ –æ—Å–µ–π
        color_discrete_sequence=px.colors.qualitative.G10,  # –ó–∞–¥–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä—ã
    ).update_traces(
        texttemplate="%{label}: <br>%{percent}<b>",
    )

    # –°–æ–∑–¥–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –¥–æ–ª–µ –≤—ã—Ä—É—á–∫–∏ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º
    inner_trace = px.pie(
        names=payments_names,  # –ù–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä—É–≥–∞
        values=sum_payments,  # –í—ã—Ä—É—á–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –º–∞–≥–∞–∑–∏–Ω—É
        hole=0.9,  # –†–∞–∑–º–µ—Ä –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä—É–≥–∞
        title="–î–æ–ª—è –≤—ã—Ä—É—á–∫–∏ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä—É–≥–∞
        labels={"names": "–ú–∞–≥–∞–∑–∏–Ω—ã", "values": "–í—ã—Ä—É—á–∫–∞"},  # –ú–µ—Ç–∫–∏ –æ—Å–µ–π
    ).update_traces(
        hoverinfo="label+value+percent",  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        textinfo="percent",  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤
        textposition="inside",  # –ü–æ–∑–∏—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤
        insidetextfont=dict(family="Arial", color="black"),  # –®—Ä–∏—Ñ—Ç –≤–Ω—É—Ç—Ä–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤
        outsidetextfont=dict(
            family="Arial Black", size=18, color="darkgrey"
        ),  # –®—Ä–∏—Ñ—Ç —Å–Ω–∞—Ä—É–∂–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤
        marker=dict(
            line=dict(color="white", width=1)
        ),  # –¶–≤–µ—Ç –∏ —Ç–æ–ª—â–∏–Ω–∞ –ª–∏–Ω–∏–∏ –≤–æ–∫—Ä—É–≥ —Å–µ–∫—Ç–æ—Ä–æ–≤
        # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞
        # %{label}: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        # %{value:$,s}: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–ø—è—Ç—ã—Ö
        # <br>: –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ (HTML —Ç–µ–≥)
        # %{percent}: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ
        # texttemplate="%{label} %{percent} ",
    )

    fig.add_trace(inner_trace["data"][0])  # –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥ –∫–∞–∫ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –≥—Ä–∞—Ñ–∏–∫–∞
    fig.update_layout(
        title="<b>–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º<b>",  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∏–∞–≥—Ä–∞–º–º—ã (–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç)
        font=dict(
            size=18, family="Arial, sans-serif", color="black"
        ),  # –®—Ä–∏—Ñ—Ç –∏ –µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        showlegend=True,  # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–µ–≥–µ–Ω–¥—É
        annotations=annotations_,
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG –≤ –æ–±—ä–µ–∫—Ç BytesIO
    image_buffer = BytesIO()
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    num_annotations = len(annotations_)
    height_per_annotation = 250  # –í—ã—Å–æ—Ç–∞ –Ω–∞ –æ–¥–Ω—É –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é)
    image_height = max(
        height_per_annotation * num_annotations, 900
    )  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ 900, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
    fig.write_image(image_buffer, format="png", width=900, height=image_height)

    # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ
    image_buffer.seek(0)

    result_data.append(data_last_time)
    return result_data, image_buffer
