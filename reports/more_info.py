from bd.model import Session, –°onsent


from .inputs import (
    SkillsInput,
    AdvantagesInput,
    HobbiesInput,
    AdditionalInformationInput,
    DesiredSalaryInput,
)
import sys
import logging

logger = logging.getLogger(__name__)

name = "üìã –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚û°Ô∏è".upper()
desc = "–¢—Ä—É–¥–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
mime = "text"


def get_inputs(session: Session):

    try:

        return {
            "skills": SkillsInput,
            "advantages": AdvantagesInput,
            "hobbies": HobbiesInput,
            # "additionalInformation": AdditionalInformationInput,
            "desiredSalary": DesiredSalaryInput,
        }

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e} –Ω–∞ —Å—Ç—Ä–æ–∫–µ {sys.exc_info()[-1].tb_lineno}")


def generate(session: Session):

    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏
        params = session.params["inputs"]["0"]
        params.update({"user_id": session.user_id})

        –°onsent.objects(user_id=session.user_id).update(**params, upsert=True)

        result = {
            "–ù–∞–≤—ã–∫–∏:": params["skills"],
            "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:": params["advantages"],
            "–•–æ–±–±–∏:": params["hobbies"],
            "–ó–ü:": params["desiredSalary"],
            "–î–∞–Ω–Ω—ã–µ –≤–Ω–µ—Å–µ–Ω—ã –≤ –í–∞—à—É –∞–Ω–∫–µ—Ç—É": "üìù",
        }
        logging.info(result)

        return [result]
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e} –Ω–∞ —Å—Ç—Ä–æ–∫–µ {sys.exc_info()[-1].tb_lineno}")
