from bd.model import Session, –°onsent


from .inputs import (
    ResidenceAddressInput,
    RegistrationAddressInput,
    PhoneInput,
)

import logging

logger = logging.getLogger(__name__)

name = "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚û°Ô∏è".upper()
desc = "–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
mime = "text"


def get_inputs(session: Session):
    return {
        "residence_address": ResidenceAddressInput,
        "home_phone": PhoneInput,
    }


def generate(session: Session):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏
    params = session.params["inputs"]["0"]
    params.update({"user_id": session.user_id})

    –°onsent.objects(user_id=session.user_id).update(**params, upsert=True)

    result = {
        "–ê–¥—Ä–µ—Å (–º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞)": params["residence_address"],
        "–ê–¥—Ä–µ—Å (–º–µ—Å—Ç–æ –ø—Ä–æ–ø–∏—Å–∫–∏)": params["registration_address"],
        "–¢–µ–ª–µ—Ñ–æ–Ω": params["home_phone"],
        "–î–∞–Ω–Ω—ã–µ –≤–Ω–µ—Å–µ–Ω—ã –≤ –í–∞—à—É –∞–Ω–∫–µ—Ç—É": "üìù",
    }

    return [result]
