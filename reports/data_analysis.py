from bd.model import Shop, Products, Documents, Session, Employees
from .util import get_intervals, get_period, get_shops_user_id, get_shops
from pprint import pprint
from collections import OrderedDict
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from io import BytesIO


from .inputs import (
    ReportDataAnalysisInput,
    ShopAllInput,
    GroupInput,
    PeriodDateInput,
    OpenDatePastInput,
    CloseDatePastInput,
)


name = "üìâüìàüìä –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•‚û°Ô∏è"
desc = ""
mime = "image_bytes"


def get_inputs(session: Session):
    period = ["day", "week", "fortnight", "month"]
    if session.params["inputs"]["0"]:
        if "period" in session.params["inputs"]["0"]:
            if session.params["inputs"]["0"]["period"] == "day":
                return {}
            if session.params["inputs"]["0"]["period"] not in period:
                return {"openDate": OpenDatePastInput}
            else:
                return {"openDate": OpenDatePastInput, "closeDate": CloseDatePastInput}
        if session.params["inputs"]["0"]["report"] == "analysis_sales_shops":
            return {
                "period": PeriodDateInput,
            }
        if session.params["inputs"]["0"]["report"] == "analysis_outcome_shops":
            return {
                "period": PeriodDateInput,
            }
    else:
        return {"report": ReportDataAnalysisInput}


def generate(session: Session):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏
    params = session.params["inputs"]["0"]

    shops_id_2 = {
        "20200630-3E0D-4061-80C1-F7897E112F00": "20220430-A472-40B8-8077-2EE96318B7E7",
        "20220201-19C9-40B0-8082-DF8A9067705D": "20220501-9ADF-402C-8012-FB88547F6222",
        "20220222-6C28-4069-8006-082BE12BEB32": "20220601-4E97-40A5-801B-1A29127AFA8B",
        "20210923-FB1F-4023-80F6-9ECB3F5A0FA8": "20220501-11CA-40E0-8031-49EADC90D1C4",
        # '20220202-B042-4021-803D-09E15DADE8A4': '20220501-CB2E-4020-808C-E3FD3CB1A1D4',
        "20210712-1362-4012-8026-5A35685630B2": "20220501-DDCF-409A-8022-486441F27458",
        "20220201-8B00-40C2-8002-EF7E53ED1220": "20220501-3254-40E5-809E-AC6BB204D373",
        "20220201-A55A-40B8-8071-EC8733AFFA8E": "20220501-4D25-40AD-80DA-77FAE02A007E",
        "20220202-B042-4021-803D-09E15DADE8A4": "20230214-33E5-4085-80A3-28C177E34112",
    }
    if params["report"] == "analysis_sales_shops":
        period = get_period(session)
        since = period["since"]
        until = period["until"]

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö
        shops = get_shops(session)
        shops_id = shops["shop_id"]

        # –¢–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        x_type = ["CLOSE_SESSION", "PAYBACK"]

        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
        sales_data = {}

        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ uuid –º–∞–≥–∞–∑–∏–Ω–æ–≤
        for shop_id in shops_id:
            sum_sales = 0
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ shop.name
            shop = Shop.objects(uuid=shop_id).only("name").first()
            if shop_id in shops_id_2:
                new_shops_id = [shop_id, shops_id_2[shop_id]]
            else:
                new_shops_id = [shop_id]
            for new_shop_id in new_shops_id:
                # –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ  –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥–Ω—è
                documents_close_session = Documents.objects(
                    __raw__={
                        "closeDate": {"$gte": since, "$lt": until},
                        "shop_id": new_shop_id,
                        "x_type": "CLOSE_SESSION",
                    }
                ).first()
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥–Ω—è
                if documents_close_session:
                    sum_sales += float(documents_close_session.closeResultSum)

                else:
                    #  –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
                    documents_sales = Documents.objects(
                        __raw__={
                            "closeDate": {"$gte": since, "$lt": until},
                            "shop_id": new_shop_id,
                            "x_type": "SELL",
                        }
                    )

                    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
                    for doc in documents_sales:
                        sum_sales += float(doc["closeResultSum"])

                    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –≤ —Å–ª–æ–≤–∞—Ä—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if sum_sales > 0:
                sales_data.update({shop.name: sum_sales})

        report_data = {
            "–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞:": since[0:10],
            "–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞:": until[0:10],
        }
        for k, v in sales_data.items():
            report_data.update({k: f"{v}‚ÇΩ"})

        # sales_list = []
        # for k, v in sales_data.items():
        #     sales_list.append(f"{k} {v}‚ÇΩ")
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Å—É–º–º—ã –ø—Ä–æ–¥–∞–∂
        shop_names = list(sales_data.keys())
        sum_sales_ = list(sales_data.values())

        # –°–æ–∑–¥–∞–µ–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
        plt.figure(figsize=(10, 10))
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ –¥–∏–∞–≥—Ä–∞–º–º–µ
        plt.rcParams["font.size"] = 14  # –ó–¥–µ—Å—å –∑–∞–¥–∞–π—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
        plt.pie(
            sum_sales_,
            labels=shop_names,
            autopct="%1.1f%%",
            startangle=140,
            textprops={"fontweight": "bold"},
        )
        plt.axis("equal")  # –ó–∞–¥–∞–µ–º —Ä–∞–≤–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –¥–ª—è –∫—Ä—É–≥–∞

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–∂
        total_sales = sum(sum_sales_)

        report_data.update({"–ò—Ç–æ–≥–æ –≤—ã—Ä—É—á–∫–∞:": f"{total_sales}‚ÇΩ"})

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ –≤ –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö –ø–æ –ø–µ—Ä–≤–æ–º—É —Å–∏–º–≤–æ–ª—É –≤ –≤–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª
        # for i, shop_name in enumerate(sales_list):
        #     plt.text(
        #         0.8,
        #         1.0 - i * 0.04,
        #         shop_name,
        #         transform=plt.gca().transAxes,
        #         fontsize=12,
        #         va="center",
        #     )

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BytesIO –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å
        image_buffer = BytesIO()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –≤ –æ–±—ä–µ–∫—Ç BytesIO
        plt.savefig(image_buffer, format="png")

        # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ
        image_buffer.seek(0)

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è
        plt.close()
        return [report_data], image_buffer
    if params["report"] == "analysis_outcome_shops":
        period = get_period(session)
        since = period["since"]
        until = period["until"]

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö
        shops = get_shops(session)
        shops_id = shops["shop_id"]

        # –¢–∏–ø—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        x_type = ["CLOSE_SESSION", "PAYBACK"]

        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
        sales_data = {}

        # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ uuid –º–∞–≥–∞–∑–∏–Ω–æ–≤
        for shop_id in shops_id:
            sum_sales = 0
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ shop.name
            shop = Shop.objects(uuid=shop_id).only("name").first()
            if shop_id in shops_id_2:
                new_shops_id = [shop_id, shops_id_2[shop_id]]
            else:
                new_shops_id = [shop_id]
            for new_shop_id in new_shops_id:
                # –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ  –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥–Ω—è
                documents_close_session = Documents.objects(
                    __raw__={
                        "closeDate": {"$gte": since, "$lt": until},
                        "shop_id": new_shop_id,
                        "x_type": "CLOSE_SESSION",
                    }
                ).first()
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥–Ω—è
                if documents_close_session:
                    sum_sales += float(documents_close_session.closeResultSum)

                else:
                    #  –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
                    documents_sales = Documents.objects(
                        __raw__={
                            "closeDate": {"$gte": since, "$lt": until},
                            "shop_id": new_shop_id,
                            "x_type": "SELL",
                        }
                    )

                    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
                    for doc in documents_sales:
                        sum_sales += float(doc["closeResultSum"])

                    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –≤ —Å–ª–æ–≤–∞—Ä—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if sum_sales > 0:
                sales_data.update({shop.name: sum_sales})

        report_data = {
            "–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞:": since[0:10],
            "–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞:": until[0:10],
        }
        for k, v in sales_data.items():
            report_data.update({k: f"{v}‚ÇΩ"})

        # sales_list = []
        # for k, v in sales_data.items():
        #     sales_list.append(f"{k} {v}‚ÇΩ")
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Å—É–º–º—ã –ø—Ä–æ–¥–∞–∂
        shop_names = list(sales_data.keys())
        sum_sales_ = list(sales_data.values())

        # –°–æ–∑–¥–∞–µ–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
        plt.figure(figsize=(10, 10))
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ –¥–∏–∞–≥—Ä–∞–º–º–µ
        plt.rcParams["font.size"] = 14  # –ó–¥–µ—Å—å –∑–∞–¥–∞–π—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
        plt.pie(
            sum_sales_,
            labels=shop_names,
            autopct="%1.1f%%",
            startangle=140,
            textprops={"fontweight": "bold"},
        )
        plt.axis("equal")  # –ó–∞–¥–∞–µ–º —Ä–∞–≤–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –¥–ª—è –∫—Ä—É–≥–∞

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–∂
        total_sales = sum(sum_sales_)

        report_data.update({"–ò—Ç–æ–≥–æ –≤—ã—Ä—É—á–∫–∞:": f"{total_sales}‚ÇΩ"})

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ –≤ –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö –ø–æ –ø–µ—Ä–≤–æ–º—É —Å–∏–º–≤–æ–ª—É –≤ –≤–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª
        # for i, shop_name in enumerate(sales_list):
        #     plt.text(
        #         0.8,
        #         1.0 - i * 0.04,
        #         shop_name,
        #         transform=plt.gca().transAxes,
        #         fontsize=12,
        #         va="center",
        #     )

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç BytesIO –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å
        image_buffer = BytesIO()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –≤ –æ–±—ä–µ–∫—Ç BytesIO
        plt.savefig(image_buffer, format="png")

        # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ
        image_buffer.seek(0)

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è
        plt.close()
        return [report_data], image_buffer
