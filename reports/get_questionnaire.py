from bd.model import –°onsent, Session
from .util import create_document
from pprint import pprint
from collections import OrderedDict


from .inputs import (
    QuestionnaireInput,
)
from docx import Document
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from io import BytesIO

import sys
import logging

logger = logging.getLogger(__name__)

name = "üìÉ –ê–Ω–∫–µ—Ç—ã ‚û°Ô∏è"
desc = "–ê–Ω–∫–µ—Ç—ã"
mime = "docx"


def get_inputs(session: Session):

    return {
        "user_id": QuestionnaireInput,
    }


def generate(session: Session):
    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ —Å–µ—Å—Å–∏–∏
        params = session.params["inputs"]["0"]

        data = –°onsent.objects(user_id=int(params["user_id"])).first()

        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –±–ª–æ–∫–∞
        def add_block_title(doc, title):
            title_paragraph = doc.add_heading(title, level=2)
            title_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞
        def add_sub_title(doc, title):
            sub_title_paragraph = doc.add_paragraph(title)
            sub_title_paragraph.style.font.bold = True

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        doc = Document()
        doc.add_heading("–ê–ù–ö–ï–¢–ê", level=1)

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ JSON

        # –ë–ª–æ–∫ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        add_block_title(doc, "–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        doc.add_paragraph(f'–§–∞–º–∏–ª–∏—è: {data["full_name"].split()[0]}')
        doc.add_paragraph(f'–ò–º—è: {data["full_name"].split()[1]}')
        doc.add_paragraph(f'–û—Ç—á–µ—Å—Ç–≤–æ: {data["full_name"].split()[2]}')
        doc.add_paragraph(f'–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {data["dateOf_birth"]}')
        doc.add_paragraph(f'–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: {data["citizenship"]}')
        doc.add_paragraph(
            f'–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è (—Å–µ–ª–æ –≥–æ—Ä–æ–¥ –∫—Ä–∞–π –æ–±–ª–∞—Å—Ç—å —Ä–µ—Å–ø—É–±–ª–∏–∫–∞): {data["place_of_birth"]}'
        )
        doc.add_paragraph(f'–ê–¥—Ä–µ—Å (–º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞): {data["residence_address"]}')
        doc.add_paragraph(f'–ê–¥—Ä–µ—Å (–º–µ—Å—Ç–æ –ø—Ä–æ–ø–∏—Å–∫–∏): {data["registration_address"]}')
        doc.add_paragraph(f'–î–æ–º–∞—à–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω: {data["home_phone"]}')
        doc.add_paragraph("–°–æ—Ç–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: [Not provided]")
        doc.add_paragraph("–†–∞–±–æ—á–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω: [Not provided]")

        # –ë–ª–æ–∫ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        add_block_title(doc, "–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        doc.add_paragraph("–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: [Not provided]")

        # –ë–ª–æ–∫ —Å–µ–º–µ–π–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è
        add_block_title(doc, "–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ")
        doc.add_paragraph(f'–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: {data["counterparty"]}')
        doc.add_paragraph("–î–µ—Ç–∏ (–ø–æ–ª –≤–æ–∑—Ä–∞—Å—Ç): [Not provided]")

        # –ë–ª–æ–∫ —Å–≤–µ–¥–µ–Ω–∏–π –æ –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞—Ö
        add_block_title(doc, "–°–≤–µ–¥–µ–Ω–∏—è –æ –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞—Ö")
        for relative in data["relatives_information"]:
            add_sub_title(doc, f'–°—Ç–µ–ø–µ–Ω—å —Ä–æ–¥—Å—Ç–≤–∞: {relative["close_relati"]}')
            doc.add_paragraph(f'–§.–ò.–û.: {relative["full_name"]}')
            doc.add_paragraph(f'–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {relative["dateOf_birth"]}')
            doc.add_paragraph(
                f'–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {relative.get("—Åompany", "[Not provided]")}'
            )
            doc.add_paragraph("–î–æ–ª–∂–Ω–æ—Å—Ç—å: [Not provided]")
            doc.add_paragraph("–¢–µ–ª–µ—Ñ–æ–Ω: [Not provided]")
            doc.add_paragraph("–ê–¥—Ä–µ—Å (–º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞): [Not provided]")

        # –ë–ª–æ–∫ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        add_block_title(doc, "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
        for edu in data["education"]:
            add_sub_title(doc, "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:")
            doc.add_paragraph(f'–î–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: {edu["education_start_date"]}')
            doc.add_paragraph(f'–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {edu["education_end_date"]}')
            doc.add_paragraph(
                f'–ù–∞–∑–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è: {edu["education_institution_name"]}'
            )
            doc.add_paragraph(f'–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {edu["specialization"]}')

        # –ë–ª–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        add_block_title(doc, "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
        # –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        for edu in data["education"]:
            add_sub_title(doc, "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:")
            doc.add_paragraph(f'–î–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: {edu["education_start_date"]}')
            doc.add_paragraph(f'–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {edu["education_end_date"]}')
            doc.add_paragraph(
                f'–ù–∞–∑–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è: {edu["education_institution_name"]}'
            )
            doc.add_paragraph(f'–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {edu["specialization"]}')

        # –ë–ª–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ –∏ —É–º–µ–Ω–∏–π
        add_block_title(doc, "–ù–∞–≤—ã–∫–∏ –∏ —É–º–µ–Ω–∏—è")
        doc.add_paragraph('–ù–∞–≤—ã–∫–∏: {data.get("skills", "[Not provided]")}')
        doc.add_paragraph("–ó–Ω–∞–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤ —Å—Ç–µ–ø–µ–Ω—å –≤–ª–∞–¥–µ–Ω–∏—è: [Not provided]")

        # –ë–ª–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª–µ–π
        add_block_title(doc, "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª–∏")
        doc.add_paragraph(
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª–∏ (–¥–æ–ª–∂–Ω–æ—Å—Ç—å –§.–ò.–û. –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω): [Not provided]"
        )

        # –ë–ª–æ–∫ —Ç—Ä—É–¥–æ–≤–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        add_block_title(doc, "–¢—Ä—É–¥–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
        doc.add_paragraph(
            "–¢—Ä—É–¥–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—É–∫–∞–∂–∏—Ç–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–µ—Å—Ç –í–∞—à–µ–π —Ä–∞–±–æ—Ç—ã):"
        )
        for work in data["works_information"]:
            doc.add_paragraph(f'–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {work["work_start_date"]}')
            doc.add_paragraph(f'–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {work["work_end_date"]}')
            doc.add_paragraph(f'–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {work["company"]}')
            doc.add_paragraph(f'–î–æ–ª–∂–Ω–æ—Å—Ç—å: {work["position"]}')
            doc.add_paragraph("–ê–¥—Ä–µ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: [Not provided]")
            doc.add_paragraph(
                f'–ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è (—Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è): {work["reason_forLeaving"]}'
            )

        # –ë–ª–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        add_block_title(doc, "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        doc.add_paragraph(f'–ñ–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã: {data["desiredSalary"]}')
        doc.add_paragraph(f'–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –í–∞—à–µ–π –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—ã: {data["advantages"]}')
        doc.add_paragraph(f'–í–∞—à–∏ —Ö–æ–±–±–∏: {data["hobbies"]}')
        doc.add_paragraph(
            "–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –¥–æ–±–∞–≤–∏—Ç—å –æ —Å–µ–±–µ: [Not provided]"
        )

        # –ë–ª–æ–∫ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        add_block_title(doc, "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        doc.add_paragraph(
            "–ü—Ä–æ—Ç–∏–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –º–Ω–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ –≤–æ–∑—Ä–∞–∂–∞—é."
        )

        # –ë–ª–æ–∫ –¥–∞—Ç—ã –∏ –ø–æ–¥–ø–∏—Å–∏
        add_block_title(doc, "–î–∞—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å—å")
        doc.add_paragraph("–î–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: [Not provided]")
        doc.add_paragraph("–ü–æ–¥–ø–∏—Å—å: [Not provided]")

        return doc
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e} –Ω–∞ —Å—Ç—Ä–æ–∫–µ {sys.exc_info()[-1].tb_lineno}")
