from arrow import utcnow, get
from bd.model import Session, Shop, TimeSync
from pprint import pprint
from .inputs import (
    ShopAllInput,
)
from .util import get_shops, calculate_for_shops
from decimal import Decimal
from collections import defaultdict
from concurrent.futures import ThreadPoolExecutor, as_completed
import plotly.express as px
from io import BytesIO


name = "üí∞üö¨ ‚Ç± –≤ –∫–∞—Å—Å–∞—Ö –¢–¢ ‚û°Ô∏è".upper()
desc = "–û—Å—Ç–∞—Ç–æ–∫ –≤ –∫–∞—Å—Å–µ"
mime = "image_bytes"


def get_inputs(session: Session):
    return {"shop": ShopAllInput}


def generate(session: Session):

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö
    shops = get_shops(session)

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö
    shops_id = shops["shop_id"]

    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Å—Å–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    cash_date = calculate_for_shops(shops_id)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤—ã
    result_date = []

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ–≤–∞—Ä—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Å—Å–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
    report_date = {}

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ–≤–∞—Ä—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    data_last_time = {}

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Å—Å–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    for k, v in cash_date.items():

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
        shop_name = Shop.objects(uuid=k).only("name").first().name
        report_date.update({shop_name: v})

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        time_sync = TimeSync.objects(shop=k).only("time").first()
        if time_sync:
            data_last_time.update({f"üï∞Ô∏è –≤—ã–≥. {shop_name}": time_sync.time})
        else:
            data_last_time.update({f"üï∞Ô∏è –≤—ã–≥. {shop_name}": "No data"})

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —Å—É–º–º—ã –ø—Ä–æ–¥–∞–∂
    shop_names = list(report_date.keys())
    sum_cash = list(report_date.values())

    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É –¥–ª—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
    fig = px.pie(
        names=shop_names,
        values=sum_cash,
        title="–î–æ–ª—è –≤—ã—Ä—É—á–∫–∏ –ø–æ –≠–ª–µ–∫—Ç—Ä–æ–Ω–∫–∞–º  –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º",
        labels={"names": "–ú–∞–≥–∞–∑–∏–Ω—ã", "values": "–í—ã—Ä—É—á–∫–∞"},
        # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞
    ).update_traces(
        # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞
        # %{label}: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        # %{value:$,s}: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–ø—è—Ç—ã—Ö
        # <br>: –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ (HTML —Ç–µ–≥)
        # %{percent}: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ
        texttemplate="%{label}: <br>%{percent}",
        showlegend=False,  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º showlegend –≤ False, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –ª–µ–≥–µ–Ω–¥—É
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –≥—Ä–∞—Ñ–∏–∫–∞
    fig.update_layout(
        title="–ü—Ä–æ–¥–∞–∂–∏  –ø–æ –≠–ª–µ–∫—Ç—Ä–æ–Ω–∫–∞–º –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º",
        font=dict(size=18, family="Arial, sans-serif", color="black"),
        # plot_bgcolor="black",  # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG –≤ –æ–±—ä–µ–∫—Ç BytesIO
    image_buffer = BytesIO()

    fig.write_image(image_buffer, format="png", width=900, height=900)

    # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–∞—á–∞–ª–æ
    image_buffer.seek(0)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ª–æ–≤–∞—Ä–µ report_date —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∞ –≤–∞–ª—é—Ç—ã "‚Ç±"
    updated_report_data = {k: f"{v}‚Ç±" for k, v in report_date.items()}

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Å—Å–µ –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    result_date.append(updated_report_data)
    result_date.append(data_last_time)

    return result_date, image_buffer
